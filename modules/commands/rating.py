from pathlib import Path
import discord
from discord.ext import commands
from discord import app_commands
from modules.utils import api_client
import os

# üîê –ß—Ç–µ–Ω–∏–µ ALLOWED_ROLES
raw_roles = os.getenv("ALLOWED_ROLES", "")
try:
    ALLOWED_ROLES = list(map(int, raw_roles.split(","))) if raw_roles else []
    if not ALLOWED_ROLES:
        print("‚ö† –í–Ω–∏–º–∞–Ω–∏–µ: ALLOWED_ROLES –Ω–µ —É–∫–∞–∑–∞–Ω—ã. –ö–æ–º–∞–Ω–¥–∞ /leaderboard –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Å–µ—Ö.")
except ValueError:
    ALLOWED_ROLES = []
    print("‚ö† –û—à–∏–±–∫–∞: ALLOWED_ROLES —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")


class Rating(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="leaderboard", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø–æ–±–µ–¥–∞–º")
    async def leaderboard(self, interaction: discord.Interaction):
        if not any(role.id in ALLOWED_ROLES for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.", ephemeral=True)
            return

        await interaction.response.defer()

        data = await api_client.get_top10_players()
        if not isinstance(data, list):
            await interaction.followup.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤.", ephemeral=True)
            return

        # üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Embed –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞
        embed = await self.build_embed(data)

        banner_path = Path(__file__).resolve().parents[2] / "modules" / "pictures" / "leaderboard.jpg"
        if not banner_path.exists():
            print(f"‚ö† –ë–∞–Ω–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {banner_path}")
            return await interaction.followup.send("‚ùå –ë–∞–Ω–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

        banner_file = discord.File(banner_path, filename="leaderboard.jpg")
        embed.set_image(url="attachment://leaderboard.jpg")

        view = Top10View(self)

        await interaction.followup.send(embed=embed, file=banner_file, view=view)

    async def build_embed(self, data):
        embed = discord.Embed(
            title="üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø–æ–±–µ–¥–∞–º",
            description="",
            color=discord.Color.orange()
        )

        medals = ["ü•á", "ü•à", "ü•â"]
        for i, player in enumerate(data[:3]):
            username = player.get("username", "‚Äî")
            discord_id = int(player.get("discord_id", 0))
            wins = player.get("wins", 0)

            name = f"{medals[i]} **{username}**"
            value = f"<@{discord_id}> ‚Äî **{wins} –ø–æ–±–µ–¥**"
            embed.add_field(name=name, value=value, inline=False)

        for player in data[3:]:
            username = player.get("username", "‚Äî")
            discord_id = int(player.get("discord_id", 0))
            wins = player.get("wins", 0)

            embed.add_field(
                name=username,
                value=f"<@{discord_id}> ‚Äî {wins} –ø–æ–±–µ–¥",
                inline=False
            )

        embed.set_footer(text="üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        embed.set_image(url="attachment://leaderboard.jpg")
        return embed


class Top10View(discord.ui.View):
    def __init__(self, rating_cog):
        super().__init__(timeout=None)
        self.rating_cog = rating_cog

    @discord.ui.button(label="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", style=discord.ButtonStyle.secondary)
    async def refresh(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()

        data = await api_client.get_top10_players()
        if not isinstance(data, list):
            await interaction.followup.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤.", ephemeral=True)
            return

        embed = await self.rating_cog.build_embed(data)

        banner_path = Path(__file__).resolve().parents[2] / "modules" / "pictures" / "leaderboard.jpg"
        if banner_path.exists():
            banner_file = discord.File(banner_path, filename="leaderboard.jpg")
            embed.set_image(url="attachment://leaderboard.jpg")
            await interaction.followup.send(embed=embed, file=banner_file, view=self)
        else:
            await interaction.followup.send("‚ùå –ë–∞–Ω–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

async def setup(bot):
    await bot.add_cog(Rating(bot))