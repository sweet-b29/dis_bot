import os
import discord
from discord.ext import commands
from dotenv import load_dotenv
from pathlib import Path
import logging
from loguru import logger
from modules.lobby.lobby import LobbyMenuView
from discord import File

load_dotenv(dotenv_path=Path(__file__).resolve().parents[2] / ".env")

TOKEN = os.getenv("DISCORD_BOT_TOKEN")
GUILD_ID = int(os.getenv("GUILD_ID", 0))
LOBBY_CHANNEL_ID = int(os.getenv("LOBBY_CHANNEL_ID", 0))

intents = discord.Intents.default()
intents.members = True
intents.guilds = True
intents.voice_states = True
intents.message_content = True

bot = commands.Bot(command_prefix=".", intents=intents)


@bot.event
async def on_ready():
    logger.success(f"ü§ñ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")


@bot.event
async def on_voice_state_update(member, before, after):
    if before.channel and before.channel != after.channel:
        vc = before.channel

        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–∞–Ω–∞–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ—Ç
        if len(vc.members) == 0 and any(vc.name.startswith(prefix) for prefix in ("‚ô¶", "‚ô£")):
            try:
                await vc.delete(reason="–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–∫–∏–Ω—É–ª–∏ –∫–∞–Ω–∞–ª.")
                logger.info(f"üóë –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—ë–Ω: {vc.name}")
            except Exception as e:
                logger.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {vc.name}: {e}")


@bot.event
async def setup_hook():
    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ modules/commands/*
    base_dir = Path(__file__).resolve().parents[2]
    commands_dir = base_dir / "modules" / "commands"

    for path in commands_dir.glob("*.py"):
        if path.name.startswith("_"):
            continue
        ext = f"modules.commands.{path.stem}"
        try:
            await bot.load_extension(ext)
            logger.success(f"‚úÖ –ó–∞–≥—Ä—É–∑–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É: {ext}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {ext}: {e}")

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    try:
        guild = discord.Object(id=GUILD_ID)
        await bot.tree.sync(guild=guild)
        logger.success(f"‚úÖ Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (guild={GUILD_ID})")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏" –≤ –∫–∞–Ω–∞–ª –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    if LOBBY_CHANNEL_ID:
        try:
            channel = await bot.fetch_channel(LOBBY_CHANNEL_ID)
            if channel:
                file_path = base_dir / "modules" / "pictures" / "–°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏.jpg"
                file = File(fp=file_path, filename="—Å–æ–∑–¥–∞–Ω–∏–µ_–ª–æ–±–±–∏.jpg")
                view = LobbyMenuView(bot)
                await channel.send(file=file, view=view)
                logger.success("üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–±–±–∏.")
        except Exception as e:
            logger.warning(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–Ω–æ–ø–∫–∏ –ª–æ–±–±–∏: {e}")


if __name__ == "__main__":
    # –£–±–∏—Ä–∞–µ–º –ª–æ–≥–≥–∏–Ω–≥ Discord, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ loguru
    logging.getLogger("discord.gateway").setLevel(logging.WARNING)
    bot.run(TOKEN)
